// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_handler.proto

#ifndef PROTOBUF_INCLUDED_object_5fhandler_2eproto
#define PROTOBUF_INCLUDED_object_5fhandler_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fhandler_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fhandler_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_object_5fhandler_2eproto();
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class PlayerParams;
class PlayerParamsDefaultTypeInternal;
extern PlayerParamsDefaultTypeInternal _PlayerParams_default_instance_;
class Players;
class PlayersDefaultTypeInternal;
extern PlayersDefaultTypeInternal _Players_default_instance_;
class Players_PlayersEntry_DoNotUse;
class Players_PlayersEntry_DoNotUseDefaultTypeInternal;
extern Players_PlayersEntry_DoNotUseDefaultTypeInternal _Players_PlayersEntry_DoNotUse_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
namespace google {
namespace protobuf {
template<> ::PlayerInfo* Arena::CreateMaybeMessage<::PlayerInfo>(Arena*);
template<> ::PlayerParams* Arena::CreateMaybeMessage<::PlayerParams>(Arena*);
template<> ::Players* Arena::CreateMaybeMessage<::Players>(Arena*);
template<> ::Players_PlayersEntry_DoNotUse* Arena::CreateMaybeMessage<::Players_PlayersEntry_DoNotUse>(Arena*);
template<> ::Point* Arena::CreateMaybeMessage<::Point>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class PlayerParams :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerParams) */ {
 public:
  PlayerParams();
  virtual ~PlayerParams();

  PlayerParams(const PlayerParams& from);

  inline PlayerParams& operator=(const PlayerParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerParams(PlayerParams&& from) noexcept
    : PlayerParams() {
    *this = ::std::move(from);
  }

  inline PlayerParams& operator=(PlayerParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerParams* internal_default_instance() {
    return reinterpret_cast<const PlayerParams*>(
               &_PlayerParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PlayerParams* other);
  friend void swap(PlayerParams& a, PlayerParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerParams* New() const final {
    return CreateMaybeMessage<PlayerParams>(nullptr);
  }

  PlayerParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerParams& from);
  void MergeFrom(const PlayerParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlayerParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_5fhandler_2eproto;
};
// -------------------------------------------------------------------

class Point :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(nullptr);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Point)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_5fhandler_2eproto;
};
// -------------------------------------------------------------------

class PlayerInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInfo(PlayerInfo&& from) noexcept
    : PlayerInfo() {
    *this = ::std::move(from);
  }

  inline PlayerInfo& operator=(PlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PlayerInfo* other);
  friend void swap(PlayerInfo& a, PlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const final {
    return CreateMaybeMessage<PlayerInfo>(nullptr);
  }

  PlayerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Point position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::Point& position() const;
  ::Point* release_position();
  ::Point* mutable_position();
  void set_allocated_position(::Point* position);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 health = 3;
  void clear_health();
  static const int kHealthFieldNumber = 3;
  ::google::protobuf::uint32 health() const;
  void set_health(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Point* position_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 health_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_5fhandler_2eproto;
};
// -------------------------------------------------------------------

class Players_PlayersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Players_PlayersEntry_DoNotUse, 
    ::google::protobuf::uint32, ::PlayerInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Players_PlayersEntry_DoNotUse, 
    ::google::protobuf::uint32, ::PlayerInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Players_PlayersEntry_DoNotUse();
  Players_PlayersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Players_PlayersEntry_DoNotUse& other);
  static const Players_PlayersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Players_PlayersEntry_DoNotUse*>(&_Players_PlayersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Players :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Players) */ {
 public:
  Players();
  virtual ~Players();

  Players(const Players& from);

  inline Players& operator=(const Players& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Players(Players&& from) noexcept
    : Players() {
    *this = ::std::move(from);
  }

  inline Players& operator=(Players&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Players& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Players* internal_default_instance() {
    return reinterpret_cast<const Players*>(
               &_Players_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Players* other);
  friend void swap(Players& a, Players& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Players* New() const final {
    return CreateMaybeMessage<Players>(nullptr);
  }

  Players* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Players>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Players& from);
  void MergeFrom(const Players& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Players* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .PlayerInfo> players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::PlayerInfo >&
      players() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::PlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:Players)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Players_PlayersEntry_DoNotUse,
      ::google::protobuf::uint32, ::PlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > players_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_5fhandler_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerParams

// -------------------------------------------------------------------

// Point

// float x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline float Point::x() const {
  // @@protoc_insertion_point(field_get:Point.x)
  return x_;
}
inline void Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Point.x)
}

// float y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline float Point::y() const {
  // @@protoc_insertion_point(field_get:Point.y)
  return y_;
}
inline void Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Point.y)
}

// float z = 3;
inline void Point::clear_z() {
  z_ = 0;
}
inline float Point::z() const {
  // @@protoc_insertion_point(field_get:Point.z)
  return z_;
}
inline void Point::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Point.z)
}

// -------------------------------------------------------------------

// PlayerInfo

// uint32 id = 1;
inline void PlayerInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:PlayerInfo.id)
  return id_;
}
inline void PlayerInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfo.id)
}

// .Point position = 2;
inline bool PlayerInfo::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void PlayerInfo::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::Point& PlayerInfo::position() const {
  const ::Point* p = position_;
  // @@protoc_insertion_point(field_get:PlayerInfo.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::Point*>(
      &::_Point_default_instance_);
}
inline ::Point* PlayerInfo::release_position() {
  // @@protoc_insertion_point(field_release:PlayerInfo.position)
  
  ::Point* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::Point* PlayerInfo::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::Point>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PlayerInfo.position)
  return position_;
}
inline void PlayerInfo::set_allocated_position(::Point* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:PlayerInfo.position)
}

// uint32 health = 3;
inline void PlayerInfo::clear_health() {
  health_ = 0u;
}
inline ::google::protobuf::uint32 PlayerInfo::health() const {
  // @@protoc_insertion_point(field_get:PlayerInfo.health)
  return health_;
}
inline void PlayerInfo::set_health(::google::protobuf::uint32 value) {
  
  health_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfo.health)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Players

// map<uint32, .PlayerInfo> players = 1;
inline int Players::players_size() const {
  return players_.size();
}
inline void Players::clear_players() {
  players_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::PlayerInfo >&
Players::players() const {
  // @@protoc_insertion_point(field_map:Players.players)
  return players_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::PlayerInfo >*
Players::mutable_players() {
  // @@protoc_insertion_point(field_mutable_map:Players.players)
  return players_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_object_5fhandler_2eproto
